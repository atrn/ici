#!/usr/local/bin/path

database_file := "tst-005.db";

start_afresh := 0;
insert_words := 0;
check_words := 0;
verbose := 0;

for (rpop(argv); arg := rpop(argv); )
{
    if (arg == "-C")
	start_afresh = 1;
    else if (arg == "-c")
	check_words = 1;
    else if (arg == "-v")
	verbose = 1;
    else
        exit("usage: tst-005.ici [-C] [-c] [-v]");
}

if (start_afresh)
{
    try remove(database_file); onerror ;
}

try
{
    sys.access(database_file);
    db := sqlite.open(database_file);
}
onerror
{
    db := sqlite.open(database_file, "c");
    db:exec("create table words(word varchar[64])");
}

if (insert_words)
{
printf("Reading words file"); flush();
words := gettokens(fopen("/usr/share/dict/words"), "\n");
printf("\rWriting words to db\n");
nwords := 0;
nadded := 0;
start := now();
db:exec("begin");
forall (word in words)
{
    ++nwords;
    if (verbose)
    {
	if (!(nwords % 10))
	{
	    printf("%d words\r", nwords);
	    flush();
	}
    }
    if (check_words)
    {
	sql = sprintf("select word from words where word = '%s'", word);
	rows = db:exec(sql);
	if (len(rows) == 1)
	    continue;
    }
    sql = sprintf("insert into words values ('%s')", word);
    db:exec(sql);
    ++nadded;
}
db:exec("commit");
end := now();
duration := end - start;

printf("\r%.2f seconds, %d words read, %d added to db\n", duration, nwords, nadded);
if (duration == 0.0) duration = 1;
printf("Reading %.2f words per second, adding %.2f per second\n",
    nwords / duration, nadded / duration);
}

rows := db:exec("select count(*) from words");
printf("%s words in db\n", rows[0]["count(*)"]);

for (ch := 'a'; ch <= 'z'; ++ch)
{
    pattern := sprintf("'%c%%'", ch);
    rows := db:exec("select * from words where word like "+pattern);
    if (len(rows) < 1) fail("no words start with 'a'?");
    printf("%d words starting with '%c'\n", len(rows), ch);
}
