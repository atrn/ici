local MyDatabase = [class: sqlite.Database,

    create_tables()
    {
        this:exec("create table if not exists table1 (id integer primary key, message text not null)");
        this:exec("create table if not exists table2 (id integer primary key, ordername text not null, price float)");
    }
];

local database = MyDatabase:new("tst-007.db", "cx");

database:exec("delete from table1");
database:table1_insert(map("id", 28, "message", "this is the text"));

rows := database:get_table1_by_id(28);
xx := database:get_table1(28);
database:table1_insert(map("id", 13, "message", "a_string"));
rows = database:get_table1_by_message("a_string");
database:exec("delete from table1");
util.log_elapsed_time("2000 inserts", [func ()
{
    database:exec("begin");
    for (id := 1; id <= 2000; ++id)
    {
        entity := map("id", id, "message", sprintf("This is the message for entity %0.5d", id));
        database:table1_insert(entity);
    }
    database:exec("commit");
}]);

rows := database:get_table1_by_message_like("%entity %23%");
printf
(
    "%s",
    sub
    (
        gsub
        (
            gsub
            (
                gsub
                (
                    sub
                    (
                        sprint(rows),
                        "\\[array",
                        ""
                    ),
                    ",],",
                    "\n"
                ),
                " \\[map ",
                ""
            ),
            " = ",
            ":"
        ),
        "]$",
        ""
    )
);

rows = database:exec("select count(*) as n from table1");
puts(rows[0].n);
