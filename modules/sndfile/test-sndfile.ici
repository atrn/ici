filename := argv[1] || "test-data.wav";

file := sndfile.open(filename);
input := sndfile.read(file);
sndfile.close(file);

format := file.format;

forall (v, k in input.properties)
{
    printf("%s -> %s\n", k, string(v));
}
printf("\n");

if (input.frames != file.frames)
{
    fail("input.frames != file.frames");
}
if (input.channels != file.channels)
{
    fail("input.channels != file.channels");
}
if (input.samplerate != file.samplerate)
{
    fail("input.samplerate != file.samplerate");
}

left := sndfile.channel(input, 1);
right := sndfile.channel(input, 2);

if (left.channels != 1)
{
    fail("left.channels != 1");
}
if (right.channels != 1)
{
    fail("right.channels != 1");
}

if (left.frames != input.frames)
{
    fail("left.frames != input.frames");
}
if (left.frames != right.frames)
{
    fail("left.frames != right.frames");
}

if (left.samplerate != input.samplerate)
{
    fail("left.samplerate != input.samplerate");
}
if (left.samplerate != right.samplerate)
{
    fail("left.samplerate != right.samplerate");
}

output := sndfile.combine(left, right);
if (output.channels != 2)
{
    fail("output.channels != 2");
}
if (output.frames != input.frames)
{
    fail(sprintf("output.frames %d != input.frames %d", output.frames, input.frames));
}
if (output.samplerate != input.samplerate)
{
    fail("output.samplerate != input.samplerate");
}

file := sndfile.create("output.wav", format, output.samplerate, output.channels);
sndfile.write(file, output);
sndfile.close(file);
