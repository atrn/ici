local Z = 1000;
local epsilon = 0.000001;

local eq(a, b)
{
    return abs(a - b) < epsilon;
}

f1 := vec(32, Z);
if (f1.size != Z)
    fail("f1.size");
if (len(f1) != 0)
    fail("len(f1) != 0");
for (i := 0; i < f1.size; ++i)
    f1[i] = 1.0;
if (len(f1) != Z)
    fail("len != Z");

f2 := vec(32, Z, pi);
if (len(f2) != f2.size)
    fail("len(f2) != f2.size");
if (!eq(f2[15], pi))
    fail(sprintf("f2[15] != pi - %.18g vs %.18g", f2[15], pi));

f1 -= 1.2; // shift DC of f1
f2 *= 2.0; // apply gain to f2

f1.myprop = 28;
if (f1.myprop != 28)
    fail("f1.myprop != 28");

two_pi := 2 * pi;
forall (v in f2)
{
    if (!eq(v, two_pi)) fail("not 2 pi");
}
