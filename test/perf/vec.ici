local N = 1000;
local Z = 10*1000*1000;

local measure(caption, f)
{
    elapsed := util.measure_elapsed_time(f);
    printf("%s %.03fs\n", caption, elapsed);
    return elapsed;
}

local fill(v)
{
    for (i := 0; i < v.capacity; ++i)
    {
        v[i] = rand() / 32768.0;
    }
}

local v1 = vec(32, Z);
local v2 = vec(32, Z);

measure
(
    sprintf("filling 2 x %d", Z),
    [func () {
        fill(v1);
        fill(v2);
    }]
);

elapsed := measure
(
    sprintf("%d times \"v1 * v2\"", N),
    [func () {
        for (i := 0; i < N; ++i)
        {
            v3 := v1 * v2;
        }
    }]
);
per := elapsed / N;
printf("%.09g per op\n", per);
